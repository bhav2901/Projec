

2)src/App.js

import React from "react";
import { Routes, Route, Navigate } from "react-router-dom";

import Sidebar from "./components/Sidebars/Sidebar";
import TopBlue from "./components/TopBlue";
import FilesPanel from "./components/Filespanel/FilesPanel";
import Downloads from "./components/Downloads";
import Favorites from "./components/Favorites";
import Navbar from "./components/Navbar";

export default function App() {
  return (
    <div className="bg-light">
      {/* Page title */}
      <header className="py-2 text-center user-title">
        <h1 className="mb-0">User Dashboard</h1>
      </header>

      <div className="container-fluid px-4">
        <div className="row gx-3">
          {/* LEFT: Sidebar */}
          <Sidebar />

          {/* RIGHT: Main content */}
          <main className="col-md-9 col-lg-10">
            <Navbar />
            <TopBlue />

            <div className="container mt-3">
              <Routes>
                <Route path="/" element={<FilesPanel />} />
                <Route path="/downloads" element={<Downloads />} />
                <Route path="/favorites" element={<Favorites />} />

                {/* Catch-all: redirect unknown routes to dashboard */}
                <Route path="*" element={<Navigate to="/" replace />} />
              </Routes>
            </div>
          </main>
        </div>
      </div>
    </div>
  );
}


export default App;









3) src/index.js

import React from "react";
import ReactDOM from "react-dom/client";
import { BrowserRouter } from "react-router-dom";
import App from "./App";
import "bootstrap/dist/css/bootstrap.min.css";
import "./index.css";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <React.StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </React.StrictMode>
);






5) -- Navbar.js

import React, { useState } from 'react';
import { NavLink } from 'react-router-dom';
import '../components/navbar.css';

// ModalPopup component
const ModalPopup = ({ showModalPopup, onPopupClose, downloadLink, popupContent }) => {
  return (
    <>
      {showModalPopup && (
        <div className="modal-overlay" onClick={() => onPopupClose(false)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            {popupContent ? (
              popupContent
            ) : (
              <>
                <h2>Download Options</h2>
                <p>Choose your download option:</p>
                <a href={downloadLink} download="your-file.pdf">
                  <button style={{ borderWidth: 1, padding: 5, margin: 10 }}>Download File</button>
                </a>
                <button
                  onClick={() => onPopupClose(false)}
                  style={{ borderWidth: 2, width: 450, display: 'grid' }}
                >
                  Close
                </button>
              </>
            )}
          </div>
        </div>
      )}
    </>
  );
};

const Navbar = () => {
  const [showDownloadPopup, setShowDownloadPopup] = useState(false);
  const [showFavoritesPopup, setShowFavoritesPopup] = useState(false);

  const toggleDownloadPopup = () => {
    setShowDownloadPopup(!showDownloadPopup);
  };

  const toggleFavoritesPopup = () => {
    setShowFavoritesPopup(!showFavoritesPopup);
  };

  return (
    <>
      <ul className="nav-links">
        <li>
          <NavLink to="/downloads" className={({ isActive }) => (isActive ? 'active' : '')}>
            <button onClick={toggleDownloadPopup} style={{ borderWidth: 1, borderColor: 'black' }}>
              Downloads
            </button>
          </NavLink>
        </li>
        <li>
          <NavLink to="/favorites" className={({ isActive }) => (isActive ? 'active' : '')}>
            <button onClick={toggleFavoritesPopup} style={{ borderWidth: 1, borderColor: 'black' }}>
              Favorites
            </button>
          </NavLink>
        </li>
      </ul>

      {/* Download Popup */}
      <ModalPopup
        showModalPopup={showDownloadPopup}
        onPopupClose={toggleDownloadPopup}
        downloadLink="/path/to/your-file.pdf"
      />

      {/* Favorites Popup */}
      <ModalPopup
        showModalPopup={showFavoritesPopup}
        onPopupClose={toggleFavoritesPopup}
        popupContent={
          <>
            <h2>Your Favorites</h2>
            <p>This is your list of favorite items!</p>
            <button onClick={toggleFavoritesPopup}>Close</button>
          </>
        }
      />
    </>
  );
};

export default Navbar;




New 



1) --- sidebar.css


.sidebar {
  background-color: #2f3b52; /* dark bg */
  min-height: 100vh;        /* take full screen height */
  padding: 1rem;
}

.btn-toggle {
  background: transparent;
  color: white !important;
  border: none;
}

.btn-toggle:hover {
  opacity: 0.85;
}


2) --- sidebar.js 



import React, { useState } from "react";
import "../Sidebars/sidebar.css";

/**
 * Matches your folder tree:
 * - SCB
 * - General (collapsible)
 *   - Reports (collapsible)
 * - Credit
 *   - General (collapsible)
 */
export default function Sidebar() {
  const [openGeneral, setOpenGeneral] = useState(true);
  const [openReports, setOpenReports] = useState(false);
  const [openCreditGeneral, setOpenCreditGeneral] = useState(false);

  return (
    <aside className="col-md-3 col-lg-2 pe-0">
      <div
        className="sidebar border rounded-start shadow-sm"
        style={{
          backgroundColor: "#2f3b52", // dark background so white text shows
          minHeight: "100vh", // full height sidebar
          paddingTop: "1rem",
        }}
      >
        {/* SCB root */}
        <div className="folder-item mb-2">
          <div className="d-flex align-items-center">
            <i className="bi bi-folder2-fill folder-icon" style={{ color: "white" }}></i>
            <span className="fw-medium" style={{ color: "white" }}>SCB</span>
          </div>
        </div>

        {/* General group */}
        <div className="folder-group mt-3">
          <button
            className="btn btn-toggle w-100 text-start d-flex align-items-center"
            onClick={() => setOpenGeneral(v => !v)}
          >
            <i className="bi bi-folder me-2" style={{ color: "white" }}></i>
            <span style={{ color: "white" }}>General</span>
            <i
              className={`bi ms-auto rotate-icon ${
                openGeneral ? "bi-caret-down-fill rotated" : "bi-caret-right-fill"
              }`}
              style={{ color: "white" }}
            ></i>
          </button>

          {openGeneral && (
            <div className="ps-3 pt-2">
              <button
                className="btn btn-toggle w-100 text-start d-flex align-items-center"
                onClick={() => setOpenReports(v => !v)}
              >
                <i className="bi bi-folder me-2" style={{ color: "white" }}></i>
                <span style={{ color: "white" }}>Reports</span>
                <i
                  className={`bi ms-auto rotate-icon-small ${
                    openReports ? "bi-caret-down-fill rotated" : "bi-caret-right-fill"
                  }`}
                  style={{ color: "white" }}
                ></i>
              </button>
              {openReports && (
                <div className="ps-3 pt-2" style={{ color: "white" }}>
                  <div className="small text-white">(no items)</div>
                </div>
              )}
            </div>
          )}
        </div>

        {/* Credit group */}
        <div className="mt-3">
          <div className="d-flex align-items-center">
            <i className="bi bi-folder2-fill folder-icon" style={{ color: "white" }}></i>
            <span className="fw-medium" style={{ color: "white" }}>Credit</span>
          </div>

          <div className="mt-2 ps-3">
            <button
              className="btn btn-toggle w-100 text-start d-flex align-items-center"
              style={{ paddingLeft: 0 }}
              onClick={() => setOpenCreditGeneral(v => !v)}
            >
              <i className="bi bi-folder me-2" style={{ color: "white" }}></i>
              <span style={{ color: "white" }}>Credit Risk</span>
              <i
                className={`bi ms-auto rotate-icon-small ${
                  openCreditGeneral ? "bi-caret-down-fill rotated" : "bi-caret-right-fill"
                }`}
                style={{ color: "white" }}
              ></i>
            </button>
            {openCreditGeneral && (
              <div className="ps-3 pt-2">
                <div className="small text-white">(empty)</div>
              </div>
            )}
          </div>
        </div>
      </div>
    </aside>
  );
}

